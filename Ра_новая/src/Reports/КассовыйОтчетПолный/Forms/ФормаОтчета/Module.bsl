// @strict-types


&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	ТабДокумент.Очистить();
	
	Макет =РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	
	ОблШапкаДокумента 	= Макет.ПолучитьОбласть("ШапкаДокумента");
	ОблШапка			= Макет.ПолучитьОбласть("Шапка");
	ОблШапкаПоступления = Макет.ПолучитьОбласть("ШапкаПоступления");
	ОблОстатокПП		= Макет.ПолучитьОбласть("ОстатокПП");
	ОблСтрокаПоступление= Макет.ПолучитьОбласть("СтрокаПоступление");
	ОблПодвалПоступление= Макет.ПолучитьОбласть("ПодвалПоступление");
				
	ОблШапкаДокумента.Параметры.ДатаС  		= Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy");
    ОблШапкаДокумента.Параметры.ДатаПо 		= Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(ОблШапкаДокумента);
	ТабДокумент.Вывести(ОблШапка);
		
	ВывестиОстатокДСфакт(ОблШапкаПоступления,Период.ДатаНачала);
	//ВывестиОстатокДСфактНаправление(ОблОстатокПП,Период.ДатаНачала);    //111116
	//ВывестиОстатокДСфактНаправление(ОблОстатокПП,Период.ДатаОкончания);
	ВывестиОстатокДСфакт(ОблШапкаПоступления,Период.ДатаОкончания);

	Поступление(ОблСтрокаПоступление,ОблПодвалПоступление);
	Выплаты(ОблСтрокаПоступление,ОблПодвалПоступление);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)	
	СформироватьОтчетНаСервере();
КонецПроцедуры

Функция ОстакиДС(НаДату,Организация,БанковскийСчет,ВидПлатежа)
	
	СуммаОстаток = 0;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КассаОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.Касса.Остатки(
		|			&НаДату,
		|			Организация В(&Организация)
		|				И РасчетныйСчет В(&БанковскийСчет)
		|				И ВидПлатежа = &ВидПлатежа) КАК КассаОстатки
		|";
	
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("ВидПлатежа", ВидПлатежа);
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	Запрос.УстановитьПараметр("Организация", Организация);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СуммаОстаток = ВыборкаДетальныеЗаписи.СуммаОстаток;	
	КонецЦикла;

	Возврат СуммаОстаток;
	
КонецФункции

Процедура ВывестиОстатокДСфакт(ОблШапкаПоступления,наДату)
	
	МастерРА= Справочники.Организации.НайтиПоКоду("000000001");
	Трионикс=  Справочники.Организации.НайтиПоКоду("000000003");
	ИП 		= 	Справочники.Организации.НайтиПоКоду("000000004");

	БанковскийСчетМастерРА 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000001");
	БанковскийСчетТрионикс 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000002");
	//БанковскийСчетИП_Райф	= Справочники.БанковскиеСчета.НайтиПоКоду("000000007");

	/////МастерРА
	спОрганизаций = Новый СписокЗначений;
	спОрганизаций.Добавить(МастерРА);
	
	спБанкСчетов = Новый СписокЗначений;
	спБанкСчетов.Добавить(БанковскийСчетМастерРА);
	
	ОстДСфактНаНач_РА = ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ФормыОплат.Безнал);	
	
	/////Трионикс
	спОрганизаций = Новый СписокЗначений;
	спОрганизаций.Добавить(Трионикс);
	
	спБанкСчетов = Новый СписокЗначений;
	спБанкСчетов.Добавить(БанковскийСчетТрионикс);

	ОстДСфактНаНач_Трионикс = ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ФормыОплат.Безнал);	
	
	/////ИП
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(ИП);
	//
	//спБанкСчетов = Новый СписокЗначений;
	//спБанкСчетов.Добавить();

	//ОстДСфактНаНач_ИП = ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ФормыОплат.Безнал);
	ОстДСфактНаНач_ИП = 0;
		
	спОрганизаций = Новый СписокЗначений;
	спОрганизаций.Добавить(МастерРА);
	
	спБанкСчетов = Новый СписокЗначений;
	спБанкСчетов.Добавить(Справочники.Кассы.НайтиПоКоду("000000005"));
	//спБанкСчетов.Добавить(Справочники.Кассы.КассаЦех);
	
	ОстДСфактНаНач_Касса = ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ФормыОплат.Нал);
	
	ОблШапкаПоступления.Параметры.ДатаС 					= Формат(наДату,"ДФ=dd.MM.yyyy");
	ОблШапкаПоступления.Параметры.ОстДСфактНаНач_РА			= ОстДСфактНаНач_РА;
	ОблШапкаПоступления.Параметры.ОстДСфактНаНач_Трионикс	= ОстДСфактНаНач_Трионикс;
	ОблШапкаПоступления.Параметры.ОстДСфактНаНач_ИП     	= ОстДСфактНаНач_ИП;
	ОблШапкаПоступления.Параметры.ОстДСфактНаНач_Итого 		= ОстДСфактНаНач_РА+ОстДСфактНаНач_Трионикс+ОстДСфактНаНач_ИП;
	ОблШапкаПоступления.Параметры.ОстДСфактНаНач_Касса		= ОстДСфактНаНач_Касса;
	////ОблШапкаПоступления.Параметры.ОстДСфактНаНач_Итог   = ОстДСфактНаНач_РА+ОстДСфактНаНач_ЛЗ+ОстДСфактНаНач_ИП+ОстДСфактНаНач_Касса;

	//
	//
	////////////////////////////////////////////////////////////////
	//БанковскийСчетМастерРА 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000001");
	//БанковскийСчетЛазурит 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000003");
	//БанковскийСчетБТ 		= Справочники.БанковскиеСчета.НайтиПоКоду("000000002");
	//БанковскийСчетБЛ_ВТБ	= Справочники.БанковскиеСчета.НайтиПоКоду("000000006");
	//БанковскийСчетБЛ_Сбер	= Справочники.БанковскиеСчета.НайтиПоКоду("000000004");
	//БанковскийСчетРР_Сбер	= Справочники.БанковскиеСчета.НайтиПоКоду("000000005");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(БТ);
	//
	//спБанкСчетов = Новый СписокЗначений;
	//спБанкСчетов.Добавить(БанковскийСчетБТ);
	//
	//ОстДСфактНаНач_БТ =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(БЛ);
	//
	//спБанкСчетов = Новый СписокЗначений;
	//спБанкСчетов.Добавить(БанковскийСчетБЛ_ВТБ);	
	//спБанкСчетов.Добавить(БанковскийСчетБЛ_Сбер);
	//
	//ОстДСфактНаНач_БЛ =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(РР);
	//
	//спБанкСчетов = Новый СписокЗначений;	
	//спБанкСчетов.Добавить(БанковскийСчетРР_Сбер);
	//
	//ОстДСфактНаНач_РР =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");	
	//
	//ОстДСфактНаНачВзачет	= ОстДСфактНаНач_БТ+ОстДСфактНаНач_БЛ+ОстДСфактНаНач_РР;	
	//ОблШапкаПоступления.Параметры.ОстДСфактНаНач_БТ	= ОстДСфактНаНач_БТ;
	//ОблШапкаПоступления.Параметры.ОстДСфактНаНач_БЛ	= ОстДСфактНаНач_БЛ;
	//ОблШапкаПоступления.Параметры.ОстДСфактНаНач_РР	= ОстДСфактНаНач_РР;
	//ОблШапкаПоступления.Параметры.ОстДСфактНаНачВзачет	= ОстДСфактНаНачВзачет;
	//
	//ОблШапкаПоступления.Параметры.ОстДСфактНаНач_Итог   = ОстДСфактНаНач_РА+ОстДСфактНаНач_ЛЗ+ОстДСфактНаНач_ИП+ОстДСфактНаНач_Касса+ОстДСфактНаНачВзачет;

	ТабДокумент.Вывести(ОблШапкаПоступления);
	
КонецПроцедуры	

Процедура ВывестиОстатокДСфактНаправление(ОблОстатокПП,наДату)
	
	//МастерРА= Справочники.Организации.НайтиПоКоду("000000001");
	//Лазурит =  Справочники.Организации.НайтиПоКоду("000000002");
	//БТ 		=  Справочники.Организации.НайтиПоКоду("000000003");
	//БЛ 		=  Справочники.Организации.НайтиПоКоду("000000004");
	//РР 		=  Справочники.Организации.НайтиПоКоду("000000005");

	//БанковскийСчетМастерРА 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000001");
	//БанковскийСчетЛазурит 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000003");
	//БанковскийСчетБТ 		= Справочники.БанковскиеСчета.НайтиПоКоду("000000002");
	//БанковскийСчетБЛ_ВТБ	= Справочники.БанковскиеСчета.НайтиПоКоду("000000006");
	//БанковскийСчетБЛ_Сбер	= Справочники.БанковскиеСчета.НайтиПоКоду("000000004");
	//БанковскийСчетРР_Сбер	= Справочники.БанковскиеСчета.НайтиПоКоду("000000005");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(БТ);
	//
	//спБанкСчетов = Новый СписокЗначений;
	//спБанкСчетов.Добавить(БанковскийСчетБТ);
	//
	//ОстДСфактНаНач_БТ =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(БЛ);
	//
	//спБанкСчетов = Новый СписокЗначений;
	//спБанкСчетов.Добавить(БанковскийСчетБЛ_ВТБ);	
	//спБанкСчетов.Добавить(БанковскийСчетБЛ_Сбер);
	//
	//ОстДСфактНаНач_БЛ =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");
	//
	//спОрганизаций = Новый СписокЗначений;
	//спОрганизаций.Добавить(РР);
	//
	//спБанкСчетов = Новый СписокЗначений;	
	//спБанкСчетов.Добавить(БанковскийСчетРР_Сбер);
	//
	//ОстДСфактНаНач_РР =  ОстакиДС(наДату,спОрганизаций,спБанкСчетов,Перечисления.ВидыПлатежей.взачет,Перечисления.ВидыПлатежейФакт.безнал,Справочники.Направления.НайтиПоНаименованию("ШП"),"=");
	//
	//ОблОстатокПП.Параметры.ДатаС 				= Формат(наДату,"ДФ=dd.MM.yyyy");
	//ОблОстатокПП.Параметры.ОстДСфактНаНач_БТ	= ОстДСфактНаНач_БТ;
	//ОблОстатокПП.Параметры.ОстДСфактНаНач_БЛ	= ОстДСфактНаНач_БЛ;
	//ОблОстатокПП.Параметры.ОстДСфактНаНач_РР	= ОстДСфактНаНач_РР;
	//ОблОстатокПП.Параметры.ОстДСфактНаНачВзачет	= ОстДСфактНаНач_БТ+ОстДСфактНаНач_БЛ+ОстДСфактНаНач_РР;
	//ОблОстатокПП.Параметры.ОстДСфактНаНач_Всего	= ОстДСфактНаНач_БТ+ОстДСфактНаНач_БЛ+ОстДСфактНаНач_РР;
	//
	//ТабДокумент.Вывести(ОблОстатокПП);
	
КонецПроцедуры

Процедура Поступление(ОблСтрокаПоступление,ОблПодвалПоступление)	
		
	МастерРА= Справочники.Организации.НайтиПоКоду("000000001");
	Трионикс=  Справочники.Организации.НайтиПоКоду("000000003");
	ИП 		= 	Справочники.Организации.НайтиПоКоду("000000004");

	БанковскийСчетМастерРА 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000001");
	БанковскийСчетТрионикс 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000002");

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиДоходов.Код КАК Код,
	|	СтатьиДоходов.КодМинор КАК КодМинор,
	|	СтатьиДоходов.Наименование КАК Наименование,
	|	ЕСТЬNULL(МастерРа.СуммаПриход, 0) КАК СуммаМастерРА,
	|	ЕСТЬNULL(Трионикс.СуммаПриход, 0) КАК СуммаТрионикс,
	|	ЕСТЬNULL(НАЛ.СуммаПриход, 0) КАК СуммаНал,
	|	ЕСТЬNULL(ИП.СуммаПриход, 0) КАК СуммаИП
	|ИЗ
	|	Справочник.СтатьиДоходов КАК СтатьиДоходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.СуммаПриход КАК СуммаПриход,
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор,
	|			КассаОбороты.Организация КАК Организация
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &МастерРА
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиДоходов) КАК КассаОбороты) КАК МастерРа
	|		ПО СтатьиДоходов.Код = МастерРа.СтатьяКод
	|			И СтатьиДоходов.КодМинор = МастерРа.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.СуммаПриход КАК СуммаПриход,
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &Трионикс
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиДоходов) КАК КассаОбороты) КАК Трионикс
	|		ПО СтатьиДоходов.Код = Трионикс.СтатьяКод
	|			И СтатьиДоходов.КодМинор = Трионикс.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.СуммаПриход КАК СуммаПриход,
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &МастерРА
	|						И ВидПлатежа = &ВидПлатежаНал
	|						И Статья ССЫЛКА Справочник.СтатьиДоходов) КАК КассаОбороты) КАК НАЛ
	|		ПО СтатьиДоходов.Код = НАЛ.СтатьяКод
	|			И СтатьиДоходов.КодМинор = НАЛ.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.СуммаПриход КАК СуммаПриход,
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &ИП
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиДоходов
	|						И РасчетныйСчет = &Счет_ИП) КАК КассаОбороты) КАК ИП
	|		ПО СтатьиДоходов.Код = ИП.СтатьяКод
	|			И СтатьиДоходов.КодМинор = ИП.СтатьяКодМинор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код,
	|	КодМинор
	|ИТОГИ
	|	СУММА(СуммаМастерРА),
	|	СУММА(СуммаТрионикс),
	|	СУММА(СуммаНал),
	|	СУММА(СуммаИП)
	|ПО
	|	Код";
	
	Запрос.УстановитьПараметр("ВидПлатежаБН", Перечисления.ФормыОплат.безнал);
	Запрос.УстановитьПараметр("ВидПлатежаНал", Перечисления.ФормыОплат.нал);
	Запрос.УстановитьПараметр("Трионикс",Трионикс);
	Запрос.УстановитьПараметр("МастерРА",МастерРА);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания); 
	Запрос.УстановитьПараметр("ИП",ИП);
	Запрос.УстановитьПараметр("Счет_ИП",Справочники.БанковскиеСчета.ПустаяСсылка());

	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Код");
	
	итПостБН_МастерРА 	= 0;
	итПостБН_Трионикс  	= 0;
	итПостНал         	= 0;
	итПостБУ 			= 0;	
	итПостНал_Итого		= 0;
	итПостБН_ИП         = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерСтатьи  = Строка(ВыборкаДетальныеЗаписи.Код);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходов.Наименование
		|ИЗ
		|	Справочник.СтатьиДоходов КАК СтатьиДоходов
		|ГДЕ
		|	СтатьиДоходов.Код = &Код
		|	И СтатьиДоходов.КодМинор = 0";
		
		Запрос.УстановитьПараметр("Код", ВыборкаДетальныеЗаписи.Код);
		
		ВыборкаКод = Запрос.Выполнить().Выбрать();			
		ВыборкаКод.Следующий();			
		ОблСтрокаПоступление.Параметры.ПоступлениеНомер	=  НомерСтатьи;
		ОблСтрокаПоступление.Параметры.ПоступлениеИмя	=  ВыборкаКод.Наименование;
		ОблСтрокаПоступление.Параметры.ПостБН_МастерРА 	=  ВыборкаДетальныеЗаписи.СуммаМастерРА;
		ОблСтрокаПоступление.Параметры.ПостБН_Трионикс 	=  ВыборкаДетальныеЗаписи.СуммаТрионикс;
		ОблСтрокаПоступление.Параметры.ПостБН_ИП        =  ВыборкаДетальныеЗаписи.СуммаИП;
		ОблСтрокаПоступление.Параметры.ПостБН			=  ВыборкаДетальныеЗаписи.СуммаТрионикс+ВыборкаДетальныеЗаписи.СуммаМастерРА+ВыборкаДетальныеЗаписи.СуммаИП;
		ОблСтрокаПоступление.Параметры.ПостНал			=  ВыборкаДетальныеЗаписи.СуммаНал;
		ОблСтрокаПоступление.Параметры.ПостНал_Итого	=  ВыборкаДетальныеЗаписи.СуммаНал;
		ОблСтрокаПоступление.Параметры.ПостИтог         =  ВыборкаДетальныеЗаписи.СуммаНал+ВыборкаДетальныеЗаписи.СуммаТрионикс+ВыборкаДетальныеЗаписи.СуммаМастерРА+ВыборкаДетальныеЗаписи.СуммаИП;
				
		ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт = Новый Шрифт(ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт,,,Истина);
		
		итПостБН_МастерРА 	= итПостБН_МастерРА+ВыборкаДетальныеЗаписи.СуммаМастерРА;
		итПостБН_Трионикс 	= итПостБН_Трионикс+ВыборкаДетальныеЗаписи.СуммаТрионикс;
		итПостБН_ИП         = итПостБН_ИП+ВыборкаДетальныеЗаписи.СуммаИП;
		итПостНал 			= итПостНал+ВыборкаДетальныеЗаписи.СуммаНал;
		
		ТабДокумент.Вывести(ОблСтрокаПоступление);	
		Выборка = ВыборкаДетальныеЗаписи.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Если Выборка.КодМинор=0 Тогда 
				Продолжить;
			КонецЕсли;	
			НомерСтатьи  = Строка(Выборка.Код)+"."+Строка(Выборка.КодМинор);
			ОблСтрокаПоступление.Параметры.ПоступлениеНомер	=  НомерСтатьи;
			ОблСтрокаПоступление.Параметры.ПостБН_МастерРА 	=  Выборка.СуммаМастерРА;
			ОблСтрокаПоступление.Параметры.ПостБН_Трионикс 	=  Выборка.СуммаТрионикс;
			ОблСтрокаПоступление.Параметры.ПостБН_ИП        =  Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПостБН			=  Выборка.СуммаТрионикс+Выборка.СуммаМастерРА+Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПостНал			=  Выборка.СуммаНал;
			ОблСтрокаПоступление.Параметры.ПостНал_Итого	=  Выборка.СуммаНал;
			ОблСтрокаПоступление.Параметры.ПостИтог         =  Выборка.СуммаНал+Выборка.СуммаТрионикс+Выборка.СуммаМастерРА+Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПоступлениеИмя	=  Выборка.Наименование;
			ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт = Новый Шрифт(ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт,,,Ложь);
			ТабДокумент.Вывести(ОблСтрокаПоступление);	
		КонецЦикла;	
	КонецЦикла;
	
	ОблПодвалПоступление.Параметры.итПостБН_МастерРА= итПостБН_МастерРА;
	ОблПодвалПоступление.Параметры.итПостБН_Трионикс= итПостБН_Трионикс;
	ОблПодвалПоступление.Параметры.итПостБН_ИП 		= итПостБН_ИП;
	ОблПодвалПоступление.Параметры.итПостБН         = итПостБН_МастерРА+итПостБН_Трионикс+итПостБН_ИП;
	ОблПодвалПоступление.Параметры.итПостНал		= итПостНал;
	ОблПодвалПоступление.Параметры.итПостНал_Итого	= итПостНал;
	ОблПодвалПоступление.Параметры.итПостИтог		= итПостНал+итПостБН_МастерРА+итПостБН_Трионикс+итПостБН_ИП;
	ОблПодвалПоступление.Параметры.Имя = "ИТОГО ПОСТУПЛЕНИЙ:";

	ТабДокумент.Вывести(ОблПодвалПоступление);	
КонецПроцедуры	

Процедура Выплаты(ОблСтрокаПоступление,ОблПодвалПоступление)	
			
	МастерРА= Справочники.Организации.НайтиПоКоду("000000001");
	Трионикс=  Справочники.Организации.НайтиПоКоду("000000003");
	ИП 		= 	Справочники.Организации.НайтиПоКоду("000000004");

	БанковскийСчетМастерРА 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000001");
	БанковскийСчетТрионикс 	= Справочники.БанковскиеСчета.НайтиПоКоду("000000002");

	ЗапросИт = Новый Запрос;
	ЗапросИт.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КассаОбороты.СуммаРасход, 0) КАК СуммаРасход,
		|	""Трионикс"" КАК Поле1
		|ИЗ
		|	РегистрНакопления.Касса.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			Организация = &Трионикс
		|				И ВидПлатежа = &ВидПлатежаБН
		|				И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КассаОбороты.СуммаРасход, 0),
		|	""МастерРА""
		|ИЗ
		|	РегистрНакопления.Касса.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			Организация = &МастерРА
		|				И ВидПлатежа = &ВидПлатежаБН
		|				И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КассаОбороты.СуммаРасход, 0),
		|	""Нал""
		|ИЗ
		|	РегистрНакопления.Касса.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			ВидПлатежа = &ВидПлатежаНал
		|				И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КассаОбороты.СуммаРасход, 0),
		|	""ИП""
		|ИЗ
		|	РегистрНакопления.Касса.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			,
		|			Организация = &ИП
		|				И ВидПлатежа = &ВидПлатежаБН
		|				И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты";
	
		ЗапросИт.УстановитьПараметр("ВидПлатежаБН", Перечисления.ФормыОплат.безнал);
		ЗапросИт.УстановитьПараметр("ВидПлатежаНал", Перечисления.ФормыОплат.нал);
		ЗапросИт.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
		ЗапросИт.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
		ЗапросИт.УстановитьПараметр("Трионикс",Трионикс);
		ЗапросИт.УстановитьПараметр("МастерРА",МастерРА);
		ЗапросИт.УстановитьПараметр("ИП",ИП);


	РезультатЗапросИт 	= ЗапросИт.Выполнить();
	табИтогов 			= РезультатЗапросИт.Выгрузить();
	
	ОблПодвалПоступление.Параметры.Имя = "ИТОГО ВЫПЛАТ:";
	ОблПодвалПоступление.Параметры.итПостБН_МастерРА= ?(табИтогов.Найти("МастерРА")=Неопределено,0,табИтогов.Найти("МастерРА").СуммаРасход);
	ОблПодвалПоступление.Параметры.итПостБН_Трионикс = ?(табИтогов.Найти("Трионикс")=Неопределено,0,табИтогов.Найти("Трионикс").СуммаРасход);
	ОблПодвалПоступление.Параметры.итПостБН_ИП 		= ?(табИтогов.Найти("ИП")=Неопределено,0,табИтогов.Найти("ИП").СуммаРасход);	
	ОблПодвалПоступление.Параметры.итПостНал		= ?(табИтогов.Найти("Нал")=Неопределено,0,табИтогов.Найти("Нал").СуммаРасход);
	ОблПодвалПоступление.Параметры.итПостНал_Итого	= ОблПодвалПоступление.Параметры.итПостНал;
	ОблПодвалПоступление.Параметры.итПостИтог		= ОблПодвалПоступление.Параметры.итПостНал_Итого+ОблПодвалПоступление.Параметры.итПостБН;
	
	ТабДокумент.Вывести(ОблПодвалПоступление);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиРасходов.Код КАК Код,
	|	СтатьиРасходов.КодМинор КАК КодМинор,
	|	СтатьиРасходов.Наименование КАК Наименование,
	|	ЕСТЬNULL(Трионикс.СуммаРасход, 0) КАК СуммаТрионикс,
	|	ЕСТЬNULL(МастерРа.СуммаРасход, 0) КАК СуммаМастерРА,
	|	ЕСТЬNULL(НАЛ.СуммаРасход, 0) КАК СуммаНал,
	|	ЕСТЬNULL(ИП.СуммаРасход, 0) КАК СуммаИП
	|ИЗ
	|	Справочник.СтатьиРасходов КАК СтатьиРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор,
	|			КассаОбороты.СуммаРасход КАК СуммаРасход
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &МастерРА
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты) КАК МастерРа
	|		ПО СтатьиРасходов.Код = МастерРа.СтатьяКод
	|			И СтатьиРасходов.КодМинор = МастерРа.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор,
	|			КассаОбороты.СуммаРасход КАК СуммаРасход
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &Трионикс
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты) КАК Трионикс
	|		ПО СтатьиРасходов.Код = Трионикс.СтатьяКод
	|			И СтатьиРасходов.КодМинор = Трионикс.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор,
	|			КассаОбороты.СуммаРасход КАК СуммаРасход
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					ВидПлатежа = &ВидПлатежаНал
	|						И Статья ССЫЛКА Справочник.СтатьиРасходов) КАК КассаОбороты) КАК НАЛ
	|		ПО СтатьиРасходов.Код = НАЛ.СтатьяКод
	|			И СтатьиРасходов.КодМинор = НАЛ.СтатьяКодМинор
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КассаОбороты.Статья.Код КАК СтатьяКод,
	|			КассаОбороты.Статья.КодМинор КАК СтатьяКодМинор,
	|			КассаОбороты.СуммаРасход КАК СуммаРасход
	|		ИЗ
	|			РегистрНакопления.Касса.Обороты(
	|					&ДатаНачала,
	|					&ДатаОкончания,
	|					,
	|					Организация = &ИП
	|						И ВидПлатежа = &ВидПлатежаБН
	|						И Статья ССЫЛКА Справочник.СтатьиРасходов
	|					) КАК КассаОбороты) КАК ИП
	|		ПО СтатьиРасходов.Код = ИП.СтатьяКод
	|			И СтатьиРасходов.КодМинор = ИП.СтатьяКодМинор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код,
	|	КодМинор
	|ИТОГИ
	|	СУММА(СуммаТрионикс),
	|	СУММА(СуммаМастерРА),
	|	СУММА(СуммаНал),
	|	СУММА(СуммаИП)
	|ПО
	|	Код";
	
	Запрос.УстановитьПараметр("ВидПлатежаБН", Перечисления.ФормыОплат.безнал);
	Запрос.УстановитьПараметр("ВидПлатежаНал", Перечисления.ФормыОплат.нал);
	Запрос.УстановитьПараметр("Трионикс",Трионикс);
	Запрос.УстановитьПараметр("МастерРА",МастерРА);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ИП",ИП);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Код");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерСтатьи  = Строка(ВыборкаДетальныеЗаписи.Код);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиРасходов.Наименование
		|ИЗ
		|	Справочник.СтатьиРасходов КАК СтатьиРасходов
		|ГДЕ
		|	СтатьиРасходов.Код = &Код
		|	И СтатьиРасходов.КодМинор = 0";
		
		Запрос.УстановитьПараметр("Код", ВыборкаДетальныеЗаписи.Код);
		
		ВыборкаКод = Запрос.Выполнить().Выбрать();			
		ВыборкаКод.Следующий();			
		ОблСтрокаПоступление.Параметры.ПоступлениеНомер	=  НомерСтатьи;
		ОблСтрокаПоступление.Параметры.ПоступлениеИмя	=  ВыборкаКод.Наименование;
		ОблСтрокаПоступление.Параметры.ПостБН_МастерРА 	=  ВыборкаДетальныеЗаписи.СуммаМастерРА;
		ОблСтрокаПоступление.Параметры.ПостБН_Трионикс 	=  ВыборкаДетальныеЗаписи.СуммаТрионикс;
		ОблСтрокаПоступление.Параметры.ПостБН_ИП        =  ВыборкаДетальныеЗаписи.СуммаИП;
		ОблСтрокаПоступление.Параметры.ПостБН			=  ВыборкаДетальныеЗаписи.СуммаТрионикс+ВыборкаДетальныеЗаписи.СуммаМастерРА+ВыборкаДетальныеЗаписи.СуммаИП;
		ОблСтрокаПоступление.Параметры.ПостНал			=  ВыборкаДетальныеЗаписи.СуммаНал;
		ОблСтрокаПоступление.Параметры.ПостНал_Итого	=  ВыборкаДетальныеЗаписи.СуммаНал;
		ОблСтрокаПоступление.Параметры.ПостИтог         =  ВыборкаДетальныеЗаписи.СуммаНал+ВыборкаДетальныеЗаписи.СуммаТрионикс+ВыборкаДетальныеЗаписи.СуммаМастерРА+ВыборкаДетальныеЗаписи.СуммаИП;
		ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт = Новый Шрифт(ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт,,,Истина);
				
		ТабДокумент.Вывести(ОблСтрокаПоступление);	
		Выборка = ВыборкаДетальныеЗаписи.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Если Выборка.КодМинор=0 Тогда 
				Продолжить;
			КонецЕсли;	
			НомерСтатьи  = Строка(Выборка.Код)+"."+Строка(Выборка.КодМинор);
			ОблСтрокаПоступление.Параметры.ПоступлениеНомер	=  НомерСтатьи;
			ОблСтрокаПоступление.Параметры.ПостБН_МастерРА 	=  Выборка.СуммаМастерРА;
			ОблСтрокаПоступление.Параметры.ПостБН_Трионикс 	=  Выборка.СуммаТрионикс;
			ОблСтрокаПоступление.Параметры.ПостБН_ИП        =  Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПостБН			=  Выборка.СуммаТрионикс+Выборка.СуммаМастерРА+Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПостНал			=  Выборка.СуммаНал;
			ОблСтрокаПоступление.Параметры.ПостНал_Итого	=  Выборка.СуммаНал;
			ОблСтрокаПоступление.Параметры.ПостИтог         =  Выборка.СуммаНал+Выборка.СуммаТрионикс+Выборка.СуммаМастерРА+Выборка.СуммаИП;
			ОблСтрокаПоступление.Параметры.ПоступлениеИмя	=  Выборка.Наименование;
			ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт = Новый Шрифт(ОблСтрокаПоступление.Области.СтрокаПоступление.Шрифт,,,Ложь);
			ТабДокумент.Вывести(ОблСтрокаПоступление);	
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если РольДоступна("ПолныеПрава")=Ложь И РольДоступна("РуководительОП")=Ложь Тогда
		Направление = Справочники.Направления.НайтиПоНаименованию("ШП");
		Элементы.Напрвление.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры

